openapi: 3.0.1
info:
  title: Devportal
  version: 0.1.0
servers:
- url: "{server}:{port}/devportal"
  variables:
    server:
      default: http://localhost
    port:
      default: "9090"
paths:
  /api:
    get:
      operationId: getApi
      parameters:
      - name: apiId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMetadata'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    post:
      operationId: postApi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiMetadata'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMetadata'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
components:
  schemas:
    Item:
      required:
      - description
      type: object
      properties:
        description:
          type: string
        icon:
          type: string
      description: Represents a bulleted list which is included in a content section.
    ServerUrl:
      required:
      - productionUrl
      - sandboxUrl
      type: object
      properties:
        sandboxUrl:
          type: string
        productionUrl:
          type: string
      description: Description.
    ErrorPayload:
      type: object
      properties:
        reason:
          type: string
          description: Reason phrase
        path:
          type: string
          description: Request path
        method:
          type: string
          description: Method type of the request
        message:
          type: string
          description: Error message
        timestamp:
          type: string
          description: Timestamp of the error
        status:
          type: integer
          description: Relevant HTTP status code
          format: int32
    Feedback:
      required:
      - apiId
      - averageRating
      - noOfComments
      - noOfRating
      - reviews
      type: object
      properties:
        apiId:
          type: string
        averageRating:
          type: integer
          format: int64
        noOfRating:
          type: integer
          format: int64
        noOfComments:
          type: integer
          format: int64
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
      description: Description.
    ApiMetadata:
      required:
      - apiDetailPageContent
      - apiId
      - apiInfo
      - feedback
      - keyManagerUrl
      - orgId
      - serverUrl
      - throttlingPolicies
      type: object
      properties:
        apiId:
          type: string
        orgId:
          type: string
        apiInfo:
          $ref: '#/components/schemas/ApiInfo'
        throttlingPolicies:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ThrottlingPolicy'
        serverUrl:
          $ref: '#/components/schemas/ServerUrl'
        feedback:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/Feedback'
        keyManagerUrl:
          $ref: '#/components/schemas/KeyManager'
        apiDetailPageContent:
          $ref: '#/components/schemas/ComponentContent'
      description: Description.
    ApiInfo:
      required:
      - additionalProperties
      - apiCategory
      - apiDocumentation
      - apiImage
      - apiName
      - lifeCycleStatus
      - openApiDefinition
      type: object
      properties:
        apiName:
          type: string
        apiCategory:
          type: array
          items:
            type: string
        apiDocumentation:
          $ref: '#/components/schemas/ContentDescription'
        apiImage:
          type: string
          nullable: true
        lifeCycleStatus:
          type: string
        openApiDefinition:
          type: string
        additionalProperties:
          type: object
          additionalProperties:
            type: string
    ContentDescription:
      required:
      - precision
      - title
      type: object
      properties:
        precision:
          type: integer
          format: int64
        description:
          type: string
        title:
          type: string
        subtitle:
          type: string
        descriptionMarkDown:
          type: string
        image:
          type: string
        video:
          type: string
        bullets:
          type: array
          items:
            $ref: '#/components/schemas/Item'
      description: Represents a content section which is included in the landing pages.
    ComponentContent:
      required:
      - componentId
      - componentTileDescription
      - componentTileImage
      - orgId
      - sections
      type: object
      properties:
        componentId:
          type: string
        orgId:
          type: string
        sections:
          type: array
          items:
            $ref: '#/components/schemas/ContentDescription'
        componentTileImage:
          type: string
        componentTileDescription:
          type: string
      description: Represents content for a component landing page(API/Solution).
    Review:
      required:
      - comment
      - rating
      - reviewId
      - reviewedBy
      type: object
      properties:
        reviewId:
          type: string
        reviewedBy:
          type: string
        rating:
          type: integer
          format: int64
        comment:
          type: string
      description: Description.
    KeyManager:
      required:
      - authorizeEndpointUrl
      - name
      - revokeEndpointUrl
      - tokenEndpointUrl
      type: object
      properties:
        name:
          type: string
        tokenEndpointUrl:
          type: string
        revokeEndpointUrl:
          type: string
        authorizeEndpointUrl:
          type: string
      description: Description.
    ThrottlingPolicy:
      required:
      - description
      - policyId
      - policyName
      - type
      type: object
      properties:
        policyId:
          type: string
        type:
          type: string
        policyName:
          type: string
        description:
          type: string
      description: Description.
