openapi: 3.0.1
info:
  title: ApiMetadata
  version: 0.1.0
servers:
- url: "{server}:{port}/apiMetadata"
  variables:
    server:
      default: http://localhost
    port:
      default: "9090"
paths:
  /api:
    get:
      operationId: getApi
      parameters:
      - name: apiID
        in: query
        required: true
        schema:
          type: string
      - name: orgName
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMetadataResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    put:
      operationId: putApi
      parameters:
      - name: apiID
        in: query
        required: true
        schema:
          type: string
      - name: orgName
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiMetadata'
      responses:
        default:
          description: Any Response
          content:
            '*/*':
              schema:
                description: Any type of entity body
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    post:
      summary: Create an API.
      operationId: postApi
      requestBody:
        description: api metadata
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiMetadata'
      responses:
        default:
          description: Any Response
          content:
            '*/*':
              schema:
                description: Any type of entity body
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /apiList:
    get:
      operationId: getApilist
      parameters:
      - name: orgName
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiMetadataResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /apiContent:
    post:
      operationId: postApicontent
      parameters:
      - name: orgName
        in: query
        required: true
        schema:
          type: string
      - name: apiName
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              description: Any type of entity body
      responses:
        "201":
          description: Created
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
components:
  schemas:
    ApiArtifacts:
      required:
      - apiImages
      type: object
      properties:
        apiImages:
          type: object
          additionalProperties:
            type: string
    ApiInfo:
      required:
      - additionalProperties
      - apiArtifacts
      - apiCategory
      - apiName
      - openApiDefinition
      - orgName
      type: object
      properties:
        orgName:
          type: string
        apiName:
          type: string
        apiCategory:
          type: array
          items:
            type: string
        openApiDefinition: {}
        additionalProperties:
          type: object
          additionalProperties:
            type: string
        apiArtifacts:
          $ref: '#/components/schemas/ApiArtifacts'
    ThrottlingPolicy:
      required:
      - description
      - policyName
      - type
      type: object
      properties:
        type:
          type: string
        policyName:
          type: string
        description:
          type: string
      description: Description.
    ServerUrl:
      required:
      - productionUrl
      - sandboxUrl
      type: object
      properties:
        sandboxUrl:
          type: string
        productionUrl:
          type: string
      description: Description.
    ApiMetadata:
      required:
      - apiInfo
      - serverUrl
      - throttlingPolicies
      type: object
      properties:
        apiInfo:
          $ref: '#/components/schemas/ApiInfo'
        throttlingPolicies:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ThrottlingPolicy'
        serverUrl:
          $ref: '#/components/schemas/ServerUrl'
      description: Description.
    ErrorPayload:
      type: object
      properties:
        reason:
          type: string
          description: Reason phrase
        path:
          type: string
          description: Request path
        method:
          type: string
          description: Method type of the request
        message:
          type: string
          description: Error message
        timestamp:
          type: string
          description: Timestamp of the error
        status:
          type: integer
          description: Relevant HTTP status code
          format: int32
    APIReview:
      required:
      - apiComment
      - apiID
      - apiName
      - apiRating
      - apiReviewer
      - reviewId
      type: object
      properties:
        reviewId:
          type: string
        apiComment:
          type: string
        apiRating:
          type: integer
          format: int64
        apiReviewer:
          type: string
        apiID:
          type: string
        apiName:
          type: string
    ApiArtifactsResponse:
      required:
      - apiContent
      - apiImages
      type: object
      properties:
        apiContent:
          type: array
          items:
            type: string
        apiImages:
          type: object
          additionalProperties:
            type: string
    ApiInfoResponse:
      required:
      - additionalProperties
      - apiArtifacts
      - apiCategory
      - apiName
      - apiVersion
      - openApiDefinition
      - orgName
      type: object
      properties:
        orgName:
          type: string
        apiName:
          type: string
        apiCategory:
          type: array
          items:
            type: string
        apiVersion:
          type: string
        openApiDefinition: {}
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/APIReview'
        additionalProperties:
          type: object
          additionalProperties:
            type: string
        apiArtifacts:
          $ref: '#/components/schemas/ApiArtifactsResponse'
    ApiMetadataResponse:
      required:
      - apiInfo
      - serverUrl
      - throttlingPolicies
      type: object
      properties:
        apiInfo:
          $ref: '#/components/schemas/ApiInfoResponse'
        throttlingPolicies:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ThrottlingPolicy'
        serverUrl:
          $ref: '#/components/schemas/ServerUrl'
