openapi: 3.0.1
info:
  title: Admin
  version: 0.1.0
servers:
- url: "{server}:{port}/admin"
  variables:
    server:
      default: http://localhost
    port:
      default: "8080"
paths:
  /organisation:
    post:
      operationId: postOrganisation
      parameters:
      - name: orgName
        in: query
        required: true
        schema:
          type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgCreationResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /orgContent:
    put:
      summary: Store the organization landing page content.
      operationId: putOrgcontent
      parameters:
      - name: orgName
        in: query
        description: 'parameter description  '
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              description: Any type of entity body
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContentResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    post:
      summary: Description.
      operationId: postOrgcontent
      parameters:
      - name: orgName
        in: query
        description: parameter description
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              description: Any type of entity body
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgContentResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /assets:
    get:
      summary: Get the asset paths for the org or api.
      operationId: getAssets
      parameters:
      - name: orgName
        in: query
        description: 'parameter description  '
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/OrganizationAssets'
                - $ref: '#/components/schemas/APIAssets'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /identityProvider:
    get:
      summary: Retrieve identity providers.
      operationId: getIdentityprovider
      parameters:
      - name: orgId
        in: query
        description: parameter description
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProvider'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    post:
      summary: Store the identity provider details for the developer portal.
      operationId: postIdentityprovider
      requestBody:
        description: IDP details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
components:
  schemas:
    OrganizationAssets:
      required:
      - apiLandingPage
      - apiStyleSheet
      - markdown
      - orgAssets
      - orgId
      - orgLandingPage
      - orgStyleSheet
      type: object
      properties:
        orgAssets:
          type: array
          items:
            type: string
        markdown:
          type: array
          items:
            type: string
        orgStyleSheet:
          type: string
        apiStyleSheet:
          type: string
        orgLandingPage:
          type: string
        apiLandingPage:
          type: string
        orgId:
          type: string
      description: Assets needed for the org landing page.
    ErrorPayload:
      type: object
      properties:
        reason:
          type: string
          description: Reason phrase
        path:
          type: string
          description: Request path
        method:
          type: string
          description: Method type of the request
        message:
          type: string
          description: Error message
        timestamp:
          type: string
          description: Timestamp of the error
        status:
          type: integer
          description: Relevant HTTP status code
          format: int32
    APIAssets:
      required:
      - apiContent
      - apiId
      - apiImages
      type: object
      properties:
        apiImages:
          type: array
          items:
            type: string
        apiContent:
          type: array
          items:
            type: string
        apiId:
          type: string
      description: Assets needed for the api landing page.
    IdentityProvider:
      required:
      - authorizeEndpoint
      - envrionments
      - introspectionEndpoint
      - issuer
      - jwksEndpoint
      - name
      - orgId
      - wellKnownEndpoint
      type: object
      properties:
        orgId:
          type: string
        name:
          type: string
        wellKnownEndpoint:
          type: string
        introspectionEndpoint:
          type: string
        issuer:
          type: string
        jwksEndpoint:
          type: string
        authorizeEndpoint:
          type: string
        envrionments:
          type: array
          items:
            type: string
      description: Identity Provider configured for dev portal.
    IdentityProviderResponse:
      required:
      - createdAt
      - id
      - idpName
      type: object
      properties:
        id:
          type: string
        idpName:
          type: string
        createdAt:
          type: string
      description: Response for IdentityProvider creaton.
    OrgCreationResponse:
      required:
      - orgId
      - orgName
      type: object
      properties:
        orgName:
          type: string
        orgId:
          type: string
      description: Response for organization creation.
    OrgContentResponse:
      required:
      - assetMappings
      - timeUploaded
      type: object
      properties:
        assetMappings:
          $ref: '#/components/schemas/OrganizationAssets'
        timeUploaded:
          type: string
      description: Response for content storage.
