openapi: 3.0.1
info:
  title: Admin
  version: 0.1.0
servers:
- url: "{server}:{port}/admin"
  variables:
    server:
      default: http://localhost
    port:
      default: "8080"
paths:
  /organisation:
    get:
      operationId: getOrganisation
      parameters:
      - name: orgName
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgCreationResponse'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    put:
      operationId: putOrganisation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgCreationResponse'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    post:
      operationId: postOrganisation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgCreationResponse'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /orgContent:
    put:
      summary: Store the organization landing page content.
      operationId: putOrgcontent
      parameters:
      - name: orgName
        in: query
        description: parameter description
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              description: Any type of entity body
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    post:
      summary: Description.
      operationId: postOrgcontent
      parameters:
      - name: orgName
        in: query
        description: parameter description
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              description: Any type of entity body
      responses:
        "201":
          description: Created
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /additionalAPIContent:
    post:
      operationId: postAdditionalapicontent
      parameters:
      - name: orgName
        in: query
        required: true
        schema:
          type: string
      - name: apiName
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              description: Any type of entity body
      responses:
        "201":
          description: Created
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /orgFiles:
    get:
      summary: Retrieve landing pages.
      operationId: getOrgfiles
      parameters:
      - name: orgName
        in: query
        description: 'parameter description  '
        required: true
        schema:
          type: string
      - name: fileName
        in: query
        description: 'parameter description  '
        required: true
        schema:
          type: string
      responses:
        default:
          description: Any Response
          content:
            '*/*':
              schema:
                description: Any type of entity body
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /orgFileType:
    get:
      operationId: getOrgfiletype
      parameters:
      - name: orgName
        in: query
        required: true
        schema:
          type: string
      - name: fileType
        in: query
        required: true
        schema:
          type: string
      - name: filePath
        in: query
        schema:
          type: string
          nullable: true
      - name: fileName
        in: query
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationAssets'
        default:
          description: Any Response
          content:
            '*/*':
              schema:
                description: Any type of entity body
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /identityProvider:
    get:
      summary: Retrieve identity providers.
      operationId: getIdentityprovider
      parameters:
      - name: orgName
        in: query
        description: parameter description
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderResponse'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    post:
      summary: Store the identity provider details for the developer portal.
      operationId: postIdentityprovider
      parameters:
      - name: orgName
        in: query
        required: true
        schema:
          type: string
      requestBody:
        description: IDP details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderResponse'
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
components:
  schemas:
    ErrorPayload:
      required:
      - message
      - method
      - path
      - reason
      - status
      - timestamp
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
          format: int64
        reason:
          type: string
        message:
          type: string
        path:
          type: string
        method:
          type: string
    IdentityProvider:
      required:
      - authorizationURL
      - callbackURL
      - clientId
      - issuer
      - logoutRedirectURI
      - logoutURL
      - scope
      - signUpURL
      - tokenURL
      - userInfoURL
      type: object
      properties:
        issuer:
          type: string
        authorizationURL:
          type: string
        tokenURL:
          type: string
        userInfoURL:
          type: string
        clientId:
          type: string
        callbackURL:
          type: string
        scope:
          type: string
        signUpURL:
          type: string
        logoutURL:
          type: string
        logoutRedirectURI:
          type: string
      description: Identity Provider configured for dev portal.
    IdentityProviderResponse:
      required:
      - authorizationURL
      - callbackURL
      - clientId
      - id
      - issuer
      - logoutRedirectURI
      - logoutURL
      - orgName
      - scope
      - signUpURL
      - tokenURL
      - userInfoURL
      type: object
      properties:
        id:
          type: string
        clientId:
          type: string
        orgName:
          type: string
        issuer:
          type: string
        authorizationURL:
          type: string
        tokenURL:
          type: string
        userInfoURL:
          type: string
        callbackURL:
          type: string
        scope:
          type: string
        signUpURL:
          type: string
        logoutURL:
          type: string
        logoutRedirectURI:
          type: string
      description: Response for IdentityProvider creaton.
    OrgCreationResponse:
      required:
      - authenticatedPages
      - isPublic
      - orgId
      - orgName
      type: object
      properties:
        orgName:
          type: string
        orgId:
          type: string
        isPublic:
          type: boolean
        authenticatedPages:
          type: array
          items:
            type: string
      description: Response for organization creation.
    Organization:
      required:
      - isPublic
      - orgName
      type: object
      properties:
        orgName:
          type: string
        isPublic:
          type: boolean
        authenticatedPages:
          type: array
          items:
            type: string
    OrganizationAssets:
      required:
      - filePath
      - orgAssetId
      - orgName
      - organizationOrgId
      - pageContent
      - pageName
      - pageType
      type: object
      properties:
        orgAssetId:
          type: string
        pageName:
          type: string
        orgName:
          type: string
        pageType:
          type: string
        filePath:
          type: string
        pageContent:
          type: string
        organizationOrgId:
          type: string
      additionalProperties: false
