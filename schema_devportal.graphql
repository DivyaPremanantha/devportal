type Query {
  all: [ApiMetadata!]!
  filter(id: String!): ApiMetadata
}

type ApiMetadata {
  apiId: String!
  openApiDefinition: String!
  apiInfo: ApiInformation!
  usagePolicy: UsagePolicy!
  rateLimitingPolicy: RateLimitingPolicy!
  accessibilityRole: String!
}

type ApiInformation {
  apiCategory: String!
  apiDocumentation: String!
  apiImage: String
}

type UsagePolicy {
  policyName: String!
  policyInfo: String!
}

type RateLimitingPolicy {
  policyName: String
  policyInfo: String
}

type Mutation {
  add(metadata: ApiMetadataEntry!): ApiMetadata!
}

input ApiMetadataEntry {
  apiId: String!
  openApiDefinition: String!
  apiInfo: ApiInfoEntry!
  usagePolicy: UsagePolicyEntry!
  rateLimitingPolicy: RateLimitingPolicyEntry
  accessibilityRole: String!
}

input ApiInfoEntry {
  apiCategory: String!
  apiDocumentation: String!
  apiImage: String
}

input UsagePolicyEntry {
  policyName: String!
  policyInfo: String!
}

input RateLimitingPolicyEntry {
  policyName: String!
  policyInfo: String!
}