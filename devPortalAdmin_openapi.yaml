openapi: 3.0.1
info:
  title: DevPortalAdmin
  version: 0.1.0
servers:
- url: "{server}:{port}/devPortalAdmin"
  variables:
    server:
      default: http://localhost
    port:
      default: "8080"
paths:
  /admin/settings/{organizationId}:
    post:
      operationId: postAdminSettingsOrganizationid
      parameters:
      - name: organizationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSettings'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSettings'
  /admin/settings/{orgId}:
    get:
      operationId: getAdminSettingsOrgid
      parameters:
      - name: orgId
        in: path
        required: true
        schema:
          type: string
      - name: kind
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSettings'
components:
  schemas:
    Heading:
      required:
      - fontFamily
      type: object
      properties:
        fontFamily:
          type: string
    OrganizationContent:
      required:
      - contentDescription
      - orgContentId
      - orgId
      - organizationName
      type: object
      properties:
        orgContentId:
          type: string
        organizationName:
          type: string
        orgId:
          type: string
        orgBanner:
          type: string
        contentDescription:
          type: array
          items:
            $ref: '#/components/schemas/Contentdescription'
      description: Represents content for the organization landin page.
    ApiListingPage:
      required:
      - apiTilePalette
      type: object
      properties:
        apiTilePalette:
          $ref: '#/components/schemas/APITilePalette'
    PaletteBackground:
      required:
      - primary
      - secondary
      type: object
      properties:
        primary:
          $ref: '#/components/schemas/PalettePrimary'
        secondary:
          $ref: '#/components/schemas/PaletteSecondary'
    Paragraph:
      required:
      - fontFamily
      type: object
      properties:
        fontFamily:
          type: string
    Typography:
      required:
      - body
      - heading
      - paragraph
      type: object
      properties:
        heading:
          $ref: '#/components/schemas/Heading'
        body:
          $ref: '#/components/schemas/Body'
        paragraph:
          $ref: '#/components/schemas/Paragraph'
    FooterLink:
      required:
      - privacyPolicy
      - support
      - terms
      type: object
      properties:
        terms:
          type: string
        privacyPolicy:
          type: string
        support:
          type: string
    PaletteButton:
      required:
      - primary
      - secondary
      type: object
      properties:
        primary:
          $ref: '#/components/schemas/PalettePrimary'
        secondary:
          $ref: '#/components/schemas/PaletteSecondary'
    Item:
      required:
      - description
      type: object
      properties:
        description:
          type: string
        icon:
          type: string
      description: Represents a bulleted list which is included in a content section.
    PalettePrimary:
      required:
      - dark
      - light
      type: object
      properties:
        light:
          type: string
        dark:
          type: string
    PaletteSecondary:
      required:
      - dark
      - light
      type: object
      properties:
        light:
          type: string
        dark:
          type: string
    Contentdescription:
      required:
      - precision
      - title
      type: object
      properties:
        precision:
          type: integer
          format: int64
        description:
          type: string
        title:
          type: string
        subtitle:
          type: string
        descriptionMarkDown:
          type: string
        image:
          type: string
        video:
          type: string
        bullets:
          type: array
          items:
            $ref: '#/components/schemas/Item'
      description: Represents a content section which is included in the landing pages.
    AssetLogourl:
      required:
      - favicon
      - footer
      - header
      type: object
      properties:
        header:
          type: string
        footer:
          type: string
        favicon:
          type: string
    PaletteText:
      required:
      - primary
      - secondary
      type: object
      properties:
        primary:
          $ref: '#/components/schemas/PalettePrimary'
        secondary:
          $ref: '#/components/schemas/PaletteSecondary'
    Assets:
      required:
      - logoUrl
      type: object
      properties:
        logoUrl:
          $ref: '#/components/schemas/AssetLogourl'
    APITilePalette:
      required:
      - background
      - button
      - text
      - type
      type: object
      properties:
        type:
          type: string
        background:
          $ref: '#/components/schemas/PaletteBackground'
        text:
          $ref: '#/components/schemas/PaletteText'
        button:
          $ref: '#/components/schemas/PaletteButton'
      description: Description.
    Theme:
      required:
      - assets
      - footerLink
      - orgId
      - palette
      - themeId
      - typography
      type: object
      properties:
        themeId:
          type: string
        orgId:
          type: string
        palette:
          $ref: '#/components/schemas/APITilePalette'
        typography:
          $ref: '#/components/schemas/Typography'
        assets:
          $ref: '#/components/schemas/Assets'
        footerLink:
          $ref: '#/components/schemas/FooterLink'
        apiListingPage:
          $ref: '#/components/schemas/ApiListingPage'
    Body:
      required:
      - fontFamily
      type: object
      properties:
        fontFamily:
          type: string
    AdminSettings:
      required:
      - kind
      type: object
      properties:
        kind:
          type: string
        organizationContent:
          $ref: '#/components/schemas/OrganizationContent'
        themeDetails:
          $ref: '#/components/schemas/Theme'
